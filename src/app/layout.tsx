/* import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
 */
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Chess Meet",
  description: "How good are players at chess?",
  authors: [{ name: "Jin Zhou", url: "https://www.linkedin.com/in/jin-zhou-a799853/" }, 
    { name: "Liqiang Deng", url: "https://www.linkedin.com/in/liqiang-deng-18b837298/" }
  ],
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const socials = {
    GitHub: "https://github.com/jzhou2014/chess-meet",
  };
  return (
    <html lang="en">
      <body className={`${inter.className} bg-white`}>
        <nav className="bg-gray-800 text-white p-4 sticky top-0">
          <div className="container mx-auto w-[80vw] flex justify-between items-center">
            <h1 className="text-2xl font-bold">
              {metadata.title as string}
              <span className="text-sm font-semibold ml-3">
                by{" "}
                {Array.isArray(metadata.authors) &&
                  metadata.authors.map((author, index) => (
                    <a
                      key={index}
                      target="_blank"
                      href={author.url as string || "#"}
                      className="hover:underline hover:text-blue-300"
                    >
                      {author.name}
                    </a>
                  )).reduce<React.ReactNode[]>((prev, curr) => [...prev, ", ", curr], [])
                  .slice(1)}
              </span>
            </h1>
            <div>
              {Object.entries(socials).map(([name, url]) => (
                <a
                  key={name}
                  href={url}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="ml-5 hover:underline hover:text-blue-300"
                >
                  {name}
                </a>
              ))}
            </div>
          </div>
        </nav>
        {children}
      </body>
    </html>
  );
}